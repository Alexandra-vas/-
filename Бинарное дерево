#include <iostream>

struct TreeNode 
{
    int value;
    TreeNode* left;
    TreeNode* right;

    TreeNode(int val) : value(val), left(nullptr), right(nullptr) {}
};

TreeNode* createTree() 
{
    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    root->right->right = new TreeNode(7);
    return root;
}

void inorderTraversal(TreeNode* root) 
{
    if (root == nullptr) return;

    inorderTraversal(root->left);
    std::cout << root->value << " ";
    inorderTraversal(root->right);
}

void deleteTree(TreeNode* root) 
{
    if (root == nullptr) return;

    deleteTree(root->left);
    deleteTree(root->right);
    delete root;
}

int main() 
{
    TreeNode* root = createTree();

    std::cout << "Inorder Traversal: ";
    inorderTraversal(root);
    std::cout << std::endl;

    deleteTree(root);

    return 0;
}
